[{"path":"https://funkyheatmap.dynverse.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 funkyheatmap authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Recreating the dynbenchmark figures","text":"data generated running data-raw/dynbenchmark_data.R script. fetches latest results dynbenchmark_results repository stores data inside funkyheatmap package.","code":"library(funkyheatmap) library(kableExtra)  data(\"dynbenchmark_data\")"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"process-results","dir":"Articles","previous_headings":"","what":"Process results","title":"Recreating the dynbenchmark figures","text":"results data one big data frame. Choose columns preview. ’s possible use funky_heatmap() visualise data frame without providing additional metadata, likely desired formatting.","code":"data <- dynbenchmark_data$data print(data[,1:12]) #> # A tibble: 51 × 12 #>    id    metho…¹ metho…² tool_id metho…³ metho…⁴ metho…⁵ metho…⁶ metho…⁷ wrapp…⁸ #>    <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <list>  <chr>   <list>  #>  1 paga  PAGA    tool    paga    Python  https:… NA      <list>   NA     <chr>   #>  2 race… RaceID… tool    raceid… R       https:… NA      <list>   NA     <chr>   #>  3 slic… SLICER  tool    slicer  R       https:… GPL-2   <list>   NA     <chr>   #>  4 slin… Slings… tool    slings… R       https:… Artist… <list>   NA     <chr>   #>  5 paga… PAGA T… tool    paga    Python  https:… NA      <list>  \"This … <chr>   #>  6 proj… Projec… tool    slings… R       https:… Artist… <list>   NA     <chr>   #>  7 mst   MST     offthe… mst     R       NA      NA      <list>   NA     <chr>   #>  8 mono… Monocl… tool    monocle R       https:… Artist… <list>   NA     <chr>   #>  9 mono… Monocl… tool    monocle R       https:… Artist… <list>   NA     <chr>   #> 10 pcre… pCreode tool    pcreode Python  https:… GPL-2   <list>   NA     <chr>   #> # … with 41 more rows, 2 more variables: wrapper_input_optional <list>, #> #   wrapper_type <chr>, and abbreviated variable names ¹​method_name, #> #   ²​method_source, ³​method_platform, ⁴​method_url, ⁵​method_license, #> #   ⁶​method_authors, ⁷​method_description, ⁸​wrapper_input_required preview_cols <- c(   \"id\",   \"method_source\",   \"method_platform\",   \"benchmark_overall_norm_correlation\",   \"benchmark_overall_norm_featureimp_wcor\",   \"benchmark_overall_norm_F1_branches\",   \"benchmark_overall_norm_him\",   \"benchmark_overall_overall\" ) kable(data[,preview_cols]) g <- funky_heatmap(data[,preview_cols]) #> ℹ No column info was provided, assuming all columns in `data` are to be plotted. #> ℹ Column info did not contain column `name`, using `id` to generate it. #> ℹ Column info did not contain information on which columns to plot, inferring from `data` types. #> ℹ Column info did not contain group information, assuming columns are ungrouped. #> ℹ Column info did not contain a column called 'palette', generating palettes based on the 'geom' column. #> ℹ Column info did not contain a column called 'width', generating options based on the 'geom' column. #> ℹ Column info did not contain a column called 'legend', generating options based on the 'geom' column. #> ℹ No row info was provided, assuming all rows in `data` are to be plotted. #> ℹ Row info did not contain group information, assuming rows are ungrouped. #> ℹ No palettes were provided, trying to automatically assign palettes. #> ℹ Palette named 'numerical_palette' was not defined. Assuming palette is numerical. Automatically selected palette 'Blues'. g"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"process-column-info","dir":"Articles","previous_headings":"","what":"Process column info","title":"Recreating the dynbenchmark figures","text":"Apart results , important additional info column info. data frame contains information column formatted. just data column info, can already get pretty good funky heatmap:","code":"column_info <- dynbenchmark_data$column_info kable(column_info) g <- funky_heatmap(data, column_info = column_info) #> ℹ No row info was provided, assuming all rows in `data` are to be plotted. #> ℹ Row info did not contain group information, assuming rows are ungrouped. #> ℹ No column groups was provided, deriving from column info. #> ℹ Column groups did not contain a column called 'palette'. Assuming no colour scales need to be used. #> ℹ Column groups did not contain a column called 'level1'. Using `column_info$group` as a makeshift column group name. #> ℹ No palettes were provided, trying to automatically assign palettes. #> ℹ Palette named 'overall' was not defined. Assuming palette is numerical. Automatically selected palette 'Blues'. #> ℹ Palette named 'benchmark' was not defined. Assuming palette is numerical. Automatically selected palette 'Reds'. #> ℹ Palette named 'scaling' was not defined. Assuming palette is numerical. Automatically selected palette 'YlOrBr'. #> ℹ Palette named 'stability' was not defined. Assuming palette is numerical. Automatically selected palette 'Greens'. #> ℹ Palette named 'qc' was not defined. Assuming palette is numerical. Automatically selected palette 'Greys'. #> ℹ Palette named 'error_reasons' was not defined. Assuming palette is categorical. Automatically selected palette 'Set3'. #> ℹ Palette named 'white6black4' was not defined. Assuming palette is numerical. Automatically selected palette 'Blues'. g #> Warning: Removed 17 rows containing missing values (`geom_rect()`). #> Warning: Removed 1 rows containing missing values (`geom_text()`)."},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"finetuning-the-visualisation","dir":"Articles","previous_headings":"","what":"Finetuning the visualisation","title":"Recreating the dynbenchmark figures","text":"figure can finetuned grouping columns rows specifying custom palettes. Column grouping: Row info: Row grouping: Palettes:","code":"column_groups <- dynbenchmark_data$column_groups kable(column_groups) row_info <- dynbenchmark_data$row_info kable(row_info) row_groups <- dynbenchmark_data$row_groups kable(row_groups) palettes <- dynbenchmark_data$palettes print(palettes) #> # A tibble: 7 × 2 #>   palette       colours     #>   <chr>         <list>      #> 1 overall       <chr [101]> #> 2 benchmark     <chr [101]> #> 3 scaling       <chr [101]> #> 4 stability     <chr [101]> #> 5 qc            <chr [101]> #> 6 error_reasons <chr [4]>   #> 7 white6black4  <chr [10]>"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"generate-funky-heatmap","dir":"Articles","previous_headings":"","what":"Generate funky heatmap","title":"Recreating the dynbenchmark figures","text":"resulting visualisation contains results Saelens et al. (2019) single plot. Note Figures 2 3 main paper Supplementary Figure 2 generated making different subsets column_info column_groups objects.  funkyheatmap automatically recommends width height generated plot. save plot, run:","code":"g <- funky_heatmap(   data = data,   column_info = column_info,   column_groups = column_groups,   row_info = row_info,   row_groups = row_groups,   palettes = palettes,   col_annot_offset = 3.2 ) g #> Warning: Removed 17 rows containing missing values (`geom_rect()`). #> Warning: Removed 1 rows containing missing values (`geom_text()`). ggsave(\"path_to_plot.pdf\", g, device = cairo_pdf, width = g$width, height = g$height)"},{"path":[]},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"Standalone executable","text":"order work, need Docker Bash installed (nothing else).","code":"wget https://github.com/dynverse/funkyheatmap/releases/latest/download/executable.zip unzip executable.zip -d funky_heatmap"},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"view-help","dir":"Articles","previous_headings":"","what":"View help","title":"Standalone executable","text":"Run --help get information arguments funky heatmap.","code":"./funky_heatmap --help"},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Standalone executable","text":"also processed mtcars dataset stored tsv file. generate plot , use following commands:","code":"./funky_heatmap --data funky_heatmap/example_data.tsv --output plot.pdf ℹ Could not find column 'id' in data. Using rownames as 'id'. ℹ No column info was provided, assuming all columns in `data` are to be plotted. ℹ Column info did not contain column `name`, using `id` to generate it. ℹ Column info did not contain information on which columns to plot, inferring from `data` types. ℹ Column info did not contain group information, assuming columns are ungrouped. ℹ Column info did not contain a column called 'palette', generating palettes based on the 'geom' column. ℹ Column info did not contain a column called 'options', generating ptions based on the 'geom' column. ℹ No row info was provided, assuming all rows in `data` are to be plotted. ℹ Row info did not contain group information, assuming rows are ungrouped. ℹ No palettes were provided, trying to automatically assign palettes. ℹ Palette named 'numerical_palette' was not defined. Assuming palette is numerical. Automatically selected palette 'Blues'."},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More information","title":"Standalone executable","text":"See funkyheatmap home page information documentation.","code":""},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"column-info","dir":"Articles","previous_headings":"","what":"Column info","title":"Demo with mtcars","text":"Define column groups","code":"column_info <- tribble(   ~id,     ~group,         ~name,                      ~geom,        ~palette,    ~options,   \"id\",    NA,             \"\",                         \"text\",       NA,          list(hjust = 0, width = 6),   \"mpg\",   \"overall\",      \"Miles / gallon\",           \"bar\",        \"palette1\",  list(width = 4, legend = FALSE),   \"cyl\",   \"overall\",      \"Number of cylinders\",      \"bar\",        \"palette2\",  list(width = 4, legend = FALSE),   \"disp\",  \"group1\",       \"Displacement (cu.in.)\",    \"funkyrect\",  \"palette1\",  lst(),   \"hp\",    \"group1\",       \"Gross horsepower\",         \"funkyrect\",  \"palette1\",  lst(),   \"drat\",  \"group1\",       \"Rear axle ratio\",          \"funkyrect\",  \"palette1\",  lst(),   \"wt\",    \"group1\",       \"Weight (1000 lbs)\",        \"funkyrect\",  \"palette1\",  lst(),   \"qsec\",  \"group2\",       \"1/4 mile time\",            \"circle\",     \"palette2\",  lst(),   \"vs\",    \"group2\",       \"Engine\",                   \"circle\",     \"palette2\",  lst(),   \"am\",    \"group2\",       \"Transmission\",             \"circle\",     \"palette2\",  lst(),   \"gear\",  \"group2\",       \"# Forward gears\",          \"circle\",     \"palette2\",  lst(),   \"carb\",  \"group2\",       \"# Carburetors\",            \"circle\",     \"palette2\",  lst() ) column_groups <- tribble( # tribble_start   ~Category,  ~group,         ~palette,   \"Overall\",  \"overall\",      \"overall\",   \"Group 1\",  \"group1\",       \"palette1\",   \"Group 2\",  \"group2\",       \"palette2\" ) # tribble_end"},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"row-info","dir":"Articles","previous_headings":"","what":"Row info","title":"Demo with mtcars","text":"Determine method grouping","code":"row_info <- data %>% transmute(id, group = \"test\") row_groups <- tibble(Group = \"Test\", group = \"test\")"},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"palettes","dir":"Articles","previous_headings":"","what":"Palettes","title":"Demo with mtcars","text":"Determine palettes","code":"palettes <- tribble(   ~palette,             ~colours,   \"overall\",            grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Greys\")[-1]))(101),   \"palette1\",           grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Blues\") %>% c(\"#011636\")))(101),   \"palette2\",           grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Reds\")[-8:-9]))(101) )"},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"funky-heatmap","dir":"Articles","previous_headings":"","what":"Funky heatmap","title":"Demo with mtcars","text":"Generate funky heatmap  funkyheatmap automatically recommends width height generated plot. save plot, run:","code":"g <- funky_heatmap(   data = data,   column_info = column_info,   column_groups = column_groups,   row_info = row_info,   row_groups = row_groups,   palettes = palettes,   expand = list(xmax = 4) ) g ggsave(\"path_to_plot.pdf\", g, device = cairo_pdf, width = g$width, height = g$height)"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"Nextflow module","text":"order work, need Docker Bash installed (nothing else).","code":"wget https://github.com/dynverse/funkyheatmap/releases/latest/download/nextflow.zip unzip nextflow.zip -d funky_heatmap"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"view-help","dir":"Articles","previous_headings":"","what":"View help","title":"Nextflow module","text":"Run --help get information arguments funky heatmap.","code":"nextflow run funky_heatmap/main.nf --help"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Nextflow module","text":"also processed mtcars dataset stored tsv file. generate plot , use following commands:","code":"nextflow run funky_heatmap/main.nf \\   --data funky_heatmap/example_data.tsv \\   --output plot.pdf \\   --publish_dir . \\   -profile docker"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More information","title":"Nextflow module","text":"See funkyheatmap home page information documentation.","code":""},{"path":"https://funkyheatmap.dynverse.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robrecht Cannoodt. Author, maintainer.            rcannood Wouter Saelens. Author.            zouter","code":""},{"path":"https://funkyheatmap.dynverse.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cannoodt R, Saelens W, Todorov H, Saeys Y (2019). “comparison single-cell trajectory inference methods.” Nature Biotechnology. doi:10.1038/s41587-019-0071-9. Cannoodt R, Saelens W (2023). “funkyheatmap: Generating Funky Heatmaps Data Frames.” Progress.","code":"@Article{,   author = {Robrecht Cannoodt and Wouter Saelens and Helena Todorov and Yvan Saeys},   title = {A comparison of single-cell trajectory inference methods.},   journal = {Nature Biotechnology},   year = {2019},   month = {4},   doi = {10.1038/s41587-019-0071-9}, } @Article{,   author = {Robrecht Cannoodt and Wouter Saelens},   title = {funkyheatmap: Generating Funky Heatmaps for Data Frames.},   journal = {In Progress},   year = {2023}, }"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"funkyheatmap-generating-funky-heatmaps-for-data-frames","dir":"","previous_headings":"","what":"Generating Funky Heatmaps for Data Frames","title":"Generating Funky Heatmaps for Data Frames","text":"funkyheatmap allows generating heatmap-like visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories.","code":""},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generating Funky Heatmaps for Data Frames","text":"can install funkyheatmap like : can also download funkyheatmap standalone executable Nextflow pipeline.","code":"install.packages(\"funkyheatmap\")"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Generating Funky Heatmaps for Data Frames","text":"Let’s use mtcars dataset example funky heatmap looks like. can visualise dataset follows.","code":"library(funkyheatmap) library(dplyr, warn.conflicts = FALSE) library(tibble, warn.conflicts = FALSE)  data(\"mtcars\") funky_heatmap(mtcars)"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"customising-the-plot","dir":"","previous_headings":"","what":"Customising the plot","title":"Generating Funky Heatmaps for Data Frames","text":"However, plot can look much better provide additional metadata rows columns. See information can customise.","code":"data <- mtcars %>%   rownames_to_column(\"id\") %>%   arrange(desc(mpg))  column_info <- tribble(   ~id,     ~group,         ~name,                      ~geom,        ~palette,    ~options,   \"id\",    \"\",             \"\",                         \"text\",       NA,          list(hjust = 0, width = 6),   \"mpg\",   \"overall\",      \"Miles / gallon\",           \"bar\",        \"palette1\",  list(width = 4, legend = FALSE),   \"cyl\",   \"overall\",      \"Number of cylinders\",      \"bar\",        \"palette2\",  list(width = 4, legend = FALSE),   \"disp\",  \"group1\",       \"Displacement (cu.in.)\",    \"funkyrect\",  \"palette1\",  lst(),   \"hp\",    \"group1\",       \"Gross horsepower\",         \"funkyrect\",  \"palette1\",  lst(),   \"drat\",  \"group1\",       \"Rear axle ratio\",          \"funkyrect\",  \"palette1\",  lst(),   \"wt\",    \"group1\",       \"Weight (1000 lbs)\",        \"funkyrect\",  \"palette1\",  lst(),   \"qsec\",  \"group2\",       \"1/4 mile time\",            \"circle\",     \"palette2\",  lst(),   \"vs\",    \"group2\",       \"Engine\",                   \"circle\",     \"palette2\",  lst(),   \"am\",    \"group2\",       \"Transmission\",             \"circle\",     \"palette2\",  lst(),   \"gear\",  \"group2\",       \"# Forward gears\",          \"circle\",     \"palette2\",  lst(),   \"carb\",  \"group2\",       \"# Carburetors\",            \"circle\",     \"palette2\",  lst() ) funky_heatmap(data, column_info = column_info, expand = list(xmax = 4))"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"more-information","dir":"","previous_headings":"","what":"More information","title":"Generating Funky Heatmaps for Data Frames","text":"reference documentation funky_heatmap() details exact formats annotation object can pass . Check vignette vignette(\"mtcars\", \"funkyheatmap\") information customize visualisation. vignette(\"dynbenchmark\", \"funkyheatmap\") use funkyheatmap regenerate figures Saelens et al. (2019) doi:10.1038/s41587-019-0071-9. used Viash wrap funkyheatmap::funky_heatmap() function standalone executable Nextflow module.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/dynbenchmark_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The results data frame from dynbenchmark. — dynbenchmark_data","title":"The results data frame from dynbenchmark. — dynbenchmark_data","text":"data generated running data-raw/dynbenchmark_data.R script. used vignette named \"vignette(\"dynbenchmark\")\" regenerate results figures Saelens et al. 2019.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/dynbenchmark_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The results data frame from dynbenchmark. — dynbenchmark_data","text":"","code":"dynbenchmark_data"},{"path":"https://funkyheatmap.dynverse.org/reference/dynbenchmark_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The results data frame from dynbenchmark. — dynbenchmark_data","text":"object class list length 6.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/dynbenchmark_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The results data frame from dynbenchmark. — dynbenchmark_data","text":"Saelens W, Cannoodt R, Todorov H, Saeys Y (2019). “comparison single-cell trajectory inference methods.” Nature Biotechnology. doi:10.1038/s41587-019-0071-9 .","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a funky heatmaps for benchmarks — funky_heatmap","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"Allows generating heatmap-like visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"","code":"funky_heatmap(   data,   column_info = NULL,   row_info = NULL,   column_groups = NULL,   row_groups = NULL,   palettes = NULL,   scale_column = TRUE,   add_abc = TRUE,   col_annot_offset = 3,   col_annot_angle = 30,   removed_entries = NULL,   expand = c(xmin = 0, xmax = 2, ymin = 0, ymax = 0) )"},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"data data frame items row features columns. Must contain one column named \"id\". column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\"). hjust: Horizontal alignment label, must [0,1] (geom = \"text\"). vjust: Vertical alignment label, must [0,1] (geom = \"text\"). size: Size label, must [0,1] (geom = \"text\"). label: column use label (geom = \"text\"). options (list json): options . values column spread across columns. useful provide data frame 1000s columns. column can json string. row_info data frame describing rows data. data contain two columns: id (character): Corresponds column data$id. group (character): group row. NA, rows split groups. column_groups data frame describing group columns column_info. Can consist following columns: group (character): corresponding group column_info$group. palette (character, optional): palette used colour column group backgrounds. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). row_groups data frame describing group rows row_info. Can consist following columns: group (character): corresponding group row_info$group. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). palettes named list palettes. entry column_info$palette entry object. entry missing, type column inferred (categorical numerical) one default palettes applied. Alternatively, name one standard palette names can used: numerical: \"Greys\", \"Blues\", \"Reds\", \"YlOrBr\", \"Greens\" categorical: \"Set3\", \"Set1\", \"Set2\", \"Dark2\" scale_column Whether apply min-max scaling numerical column. add_abc Whether add subfigure labels different columns groups. col_annot_offset much column annotation offset . col_annot_angle angle column annotation labels. removed_entries methods show rows. Missing methods replaced \"shown\" label. expand list directions expand plot .","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"ggplot. .$width .$height suggested dimensions storing plot ggsave().","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"","code":"library(tibble, warn.conflicts = FALSE)  data(\"mtcars\")  data <- rownames_to_column(mtcars, \"id\")  funky_heatmap(data) #> ℹ No column info was provided, assuming all columns in `data` are to be plotted. #> ℹ Column info did not contain column `name`, using `id` to generate it. #> ℹ Column info did not contain information on which columns to plot, inferring from `data` types. #> ℹ Column info did not contain group information, assuming columns are ungrouped. #> ℹ Column info did not contain a column called 'palette', generating palettes based on the 'geom' column. #> ℹ Column info did not contain a column called 'width', generating options based on the 'geom' column. #> ℹ Column info did not contain a column called 'legend', generating options based on the 'geom' column. #> ℹ No row info was provided, assuming all rows in `data` are to be plotted. #> ℹ Row info did not contain group information, assuming rows are ungrouped. #> ℹ No palettes were provided, trying to automatically assign palettes. #> ℹ Palette named 'numerical_palette' was not defined. Assuming palette is numerical. Automatically selected palette 'Blues'."},{"path":"https://funkyheatmap.dynverse.org/reference/funkyheatmap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","title":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","text":"Allows generating heatmap-like visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories. Saelens et al. (2019) doi:10.1038/s41587-019-0071-9 . Allows generating heatmap-likes visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funkyheatmap-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","text":"package heavily depends functions provided ggplot2 ggforce.","code":""},{"path":[]},{"path":"https://funkyheatmap.dynverse.org/reference/funkyheatmap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","text":"Maintainer: Robrecht Cannoodt rcannood@gmail.com (ORCID) (rcannood) Authors: Wouter Saelens wouter.saelens@gmail.com (ORCID) (zouter)","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/geom_rounded_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounded rectangles — geom_rounded_rect","title":"Rounded rectangles — geom_rounded_rect","text":"ggplot2::geom_rect() , curvier. Use radius aesthetic change corner radius.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/geom_rounded_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounded rectangles — geom_rounded_rect","text":"","code":"geom_rounded_rect(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://funkyheatmap.dynverse.org/reference/geom_rounded_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounded rectangles — geom_rounded_rect","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/geom_rounded_rect.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Rounded rectangles — geom_rounded_rect","text":"geom_tile() understands following aesthetics (required aesthetics bold): x y alpha colour fill group height linetype linewidth width Note geom_raster() ignores colour. Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/geom_rounded_rect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounded rectangles — geom_rounded_rect","text":"","code":"library(ggplot2)  df <- data.frame(   x = rep(c(2, 5, 7, 9, 12), 2),   y = rep(c(1, 2), each = 5),   z = factor(rep(1:5, each = 2)),   w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2) )  ggplot(df) +   geom_rounded_rect(     aes(       xmin = x - w / 2,       xmax = x + w / 2,       ymin = y,       ymax = y + 1,       radius = .5,       fill = z     ),     colour = \"white\"  )"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the column groups object — verify_column_groups","title":"Verify the integrity of the column groups object — verify_column_groups","text":"Verify integrity column groups object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the column groups object — verify_column_groups","text":"","code":"verify_column_groups(column_groups, column_info)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the column groups object — verify_column_groups","text":"column_groups data frame describing group columns column_info. Can consist following columns: group (character): corresponding group column_info$group. palette (character, optional): palette used colour column group backgrounds. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\"). hjust: Horizontal alignment label, must [0,1] (geom = \"text\"). vjust: Vertical alignment label, must [0,1] (geom = \"text\"). size: Size label, must [0,1] (geom = \"text\"). label: column use label (geom = \"text\"). options (list json): options . values column spread across columns. useful provide data frame 1000s columns. column can json string.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the column groups object — verify_column_groups","text":"column groups object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the column groups object — verify_column_groups","text":"","code":"library(tibble) column_groups <- tribble(   ~group, ~level1,   \"foo\", \"Foo\",   \"bar\", \"Bar\" ) column_info <- tribble(   ~id, ~geom, ~group,   \"name\", \"text\", NA_character_,   \"foo1\", \"funkyrect\", \"foo\",   \"foo2\", \"funkyrect\", \"foo\",   \"bar1\", \"funkyrect\", \"bar\",   \"bar2\", \"funkyrect\", \"bar\" ) verify_column_groups(column_groups, column_info) #> ℹ Column groups did not contain a column called 'palette'. Assuming no colour scales need to be used. #> # A tibble: 2 × 3 #>   group level1 palette #>   <chr> <chr>  <chr>   #> 1 foo   Foo    NA      #> 2 bar   Bar    NA"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the column info object — verify_column_info","title":"Verify the integrity of the column info object — verify_column_info","text":"Verify integrity column info object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the column info object — verify_column_info","text":"","code":"verify_column_info(column_info, data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the column info object — verify_column_info","text":"column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\"). hjust: Horizontal alignment label, must [0,1] (geom = \"text\"). vjust: Vertical alignment label, must [0,1] (geom = \"text\"). size: Size label, must [0,1] (geom = \"text\"). label: column use label (geom = \"text\"). options (list json): options . values column spread across columns. useful provide data frame 1000s columns. column can json string. data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the column info object — verify_column_info","text":"column info object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the column info object — verify_column_info","text":"","code":"library(tibble) data <- tribble(   ~id, ~name, ~x, ~y,   \"foo\", \"Foo\", 0.5, 0.7,   \"bar\", \"Bar\", 1.0, 0.1 ) column_info <- tribble(   ~id, ~geom,   \"name\", \"text\",   \"x\", \"funkyrect\",   \"y\", \"funkyrect\" ) verify_column_info(column_info, data) #> ℹ Column info did not contain column `name`, using `id` to generate it. #> ℹ Column info did not contain group information, assuming columns are ungrouped. #> ℹ Column info did not contain a column called 'palette', generating palettes based on the 'geom' column. #> ℹ Column info did not contain a column called 'width', generating options based on the 'geom' column. #> ℹ Column info did not contain a column called 'legend', generating options based on the 'geom' column. #> # A tibble: 3 × 8 #>   id    geom      name  group palette           width overlay legend #>   <chr> <chr>     <chr> <chr> <chr>             <dbl> <lgl>   <lgl>  #> 1 name  text      Name  NA    NA                    6 FALSE   FALSE  #> 2 x     funkyrect X     NA    numerical_palette     1 FALSE   TRUE   #> 3 y     funkyrect Y     NA    numerical_palette     1 FALSE   TRUE"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the data object — verify_data","title":"Verify the integrity of the data object — verify_data","text":"Verify integrity data object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the data object — verify_data","text":"","code":"verify_data(data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the data object — verify_data","text":"data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the data object — verify_data","text":"verified data object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the data object — verify_data","text":"","code":"library(tibble) data <- tribble(   ~id, ~name, ~x, ~y,   \"foo\", \"Foo\", 0.5, 0.7,   \"bar\", \"Bar\", 1.0, 0.1 ) verify_data(data) #> # A tibble: 2 × 4 #>   id    name      x     y #>   <chr> <chr> <dbl> <dbl> #> 1 foo   Foo     0.5   0.7 #> 2 bar   Bar     1     0.1"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the palettes object — verify_palettes","title":"Verify the integrity of the palettes object — verify_palettes","text":"Verify integrity palettes object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the palettes object — verify_palettes","text":"","code":"verify_palettes(palettes, column_info, data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the palettes object — verify_palettes","text":"palettes named list palettes. entry column_info$palette entry object. entry missing, type column inferred (categorical numerical) one default palettes applied. Alternatively, name one standard palette names can used: numerical: \"Greys\", \"Blues\", \"Reds\", \"YlOrBr\", \"Greens\" categorical: \"Set3\", \"Set1\", \"Set2\", \"Dark2\" column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\"). hjust: Horizontal alignment label, must [0,1] (geom = \"text\"). vjust: Vertical alignment label, must [0,1] (geom = \"text\"). size: Size label, must [0,1] (geom = \"text\"). label: column use label (geom = \"text\"). options (list json): options . values column spread across columns. useful provide data frame 1000s columns. column can json string. data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the palettes object — verify_palettes","text":"palettes object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the palettes object — verify_palettes","text":"","code":"library(tibble) library(grDevices) library(RColorBrewer)  # explicit form data <- tribble(   ~id, ~name, ~x, ~y,   \"foo\", \"Foo\", 0.5, 0.7,   \"bar\", \"Bar\", 1.0, 0.1 ) column_info <- tribble(   ~id, ~geom, ~palette,   \"name\", \"text\", NA,   \"foo\", \"funkyrect\", \"pal1\",   \"bar\", \"funkyrect\", \"pal2\" ) palettes <- list(   pal1 = rev(brewer.pal(9, \"Greys\")[-1]),   pal2 = rev(brewer.pal(9, \"Reds\")[-8:-9]) ) verify_palettes(palettes, column_info, data) #> $pal1 #> [1] \"#000000\" \"#252525\" \"#525252\" \"#737373\" \"#969696\" \"#BDBDBD\" \"#D9D9D9\" #> [8] \"#F0F0F0\" #>  #> $pal2 #> [1] \"#CB181D\" \"#EF3B2C\" \"#FB6A4A\" \"#FC9272\" \"#FCBBA1\" \"#FEE0D2\" \"#FFF5F0\" #>   # implicit palettes palettes <- list(   pal1 = \"Greys\",   pal2 = \"Reds\" ) verify_palettes(palettes, column_info, data) #> $pal1 #>   [1] \"#000000\" \"#020202\" \"#050505\" \"#070707\" \"#0A0A0A\" \"#0C0C0C\" \"#0F0F0F\" #>   [8] \"#121212\" \"#141414\" \"#171717\" \"#191919\" \"#1C1C1C\" \"#1F1F1F\" \"#212121\" #>  [15] \"#242424\" \"#272727\" \"#2A2A2A\" \"#2D2D2D\" \"#303030\" \"#333333\" \"#373737\" #>  [22] \"#3A3A3A\" \"#3D3D3D\" \"#404040\" \"#434343\" \"#464646\" \"#494949\" \"#4D4D4D\" #>  [29] \"#505050\" \"#525252\" \"#555555\" \"#575757\" \"#595959\" \"#5C5C5C\" \"#5E5E5E\" #>  [36] \"#606060\" \"#636363\" \"#656565\" \"#676767\" \"#6A6A6A\" \"#6C6C6C\" \"#6E6E6E\" #>  [43] \"#717171\" \"#737373\" \"#757575\" \"#787878\" \"#7A7A7A\" \"#7D7D7D\" \"#7F7F7F\" #>  [50] \"#828282\" \"#848484\" \"#868686\" \"#898989\" \"#8B8B8B\" \"#8E8E8E\" \"#909090\" #>  [57] \"#939393\" \"#959595\" \"#989898\" \"#9B9B9B\" \"#9D9D9D\" \"#A0A0A0\" \"#A3A3A3\" #>  [64] \"#A5A5A5\" \"#A8A8A8\" \"#ABABAB\" \"#AEAEAE\" \"#B0B0B0\" \"#B3B3B3\" \"#B6B6B6\" #>  [71] \"#B9B9B9\" \"#BBBBBB\" \"#BEBEBE\" \"#C0C0C0\" \"#C2C2C2\" \"#C4C4C4\" \"#C5C5C5\" #>  [78] \"#C7C7C7\" \"#C9C9C9\" \"#CBCBCB\" \"#CDCDCD\" \"#CFCFCF\" \"#D1D1D1\" \"#D3D3D3\" #>  [85] \"#D5D5D5\" \"#D7D7D7\" \"#D9D9D9\" \"#DBDBDB\" \"#DCDCDC\" \"#DEDEDE\" \"#DFDFDF\" #>  [92] \"#E1E1E1\" \"#E3E3E3\" \"#E4E4E4\" \"#E6E6E6\" \"#E7E7E7\" \"#E9E9E9\" \"#EBEBEB\" #>  [99] \"#ECECEC\" \"#EEEEEE\" \"#F0F0F0\" #>  #> $pal2 #>   [1] \"#CB181D\" \"#CD1A1D\" \"#CF1C1E\" \"#D11E1F\" \"#D32020\" \"#D52221\" \"#D72422\" #>   [8] \"#DA2623\" \"#DC2824\" \"#DE2A25\" \"#E02D26\" \"#E22F26\" \"#E43127\" \"#E73328\" #>  [15] \"#E93529\" \"#EB372A\" \"#ED392B\" \"#EF3B2C\" \"#EF3E2E\" \"#F04130\" \"#F14432\" #>  [22] \"#F24733\" \"#F24A35\" \"#F34C37\" \"#F44F39\" \"#F5523B\" \"#F5553C\" \"#F6583E\" #>  [29] \"#F75A40\" \"#F75D42\" \"#F86044\" \"#F96345\" \"#FA6647\" \"#FA6949\" \"#FB6B4B\" #>  [36] \"#FB6E4E\" \"#FB7050\" \"#FB7252\" \"#FB7555\" \"#FB7757\" \"#FB7A5A\" \"#FB7C5C\" #>  [43] \"#FB7E5E\" \"#FB8161\" \"#FB8363\" \"#FB8666\" \"#FB8868\" \"#FB8A6A\" \"#FB8D6D\" #>  [50] \"#FB8F6F\" \"#FC9272\" \"#FC9474\" \"#FC9677\" \"#FC997A\" \"#FC9B7D\" \"#FC9E80\" #>  [57] \"#FCA082\" \"#FCA385\" \"#FCA588\" \"#FCA88B\" \"#FCAA8E\" \"#FCAD91\" \"#FCAF93\" #>  [64] \"#FCB196\" \"#FCB499\" \"#FCB69C\" \"#FCB99F\" \"#FCBBA1\" \"#FCBDA4\" \"#FCC0A7\" #>  [71] \"#FCC2AA\" \"#FCC4AD\" \"#FCC6B0\" \"#FCC9B3\" \"#FCCBB6\" \"#FDCDB9\" \"#FDCFBC\" #>  [78] \"#FDD1BF\" \"#FDD4C2\" \"#FDD6C5\" \"#FDD8C8\" \"#FDDACB\" \"#FDDDCE\" \"#FDDFD1\" #>  [85] \"#FEE0D3\" \"#FEE2D5\" \"#FEE3D6\" \"#FEE4D8\" \"#FEE5DA\" \"#FEE7DC\" \"#FEE8DE\" #>  [92] \"#FEE9DF\" \"#FEEAE1\" \"#FEECE3\" \"#FEEDE5\" \"#FEEEE7\" \"#FEEFE8\" \"#FEF1EA\" #>  [99] \"#FEF2EC\" \"#FEF3EE\" \"#FFF5F0\" #>   # passing a tibble should also work (for backwards compatibility) palettes <- tribble(   ~palette, ~colours,   \"pal1\", rev(brewer.pal(9, \"Greys\")[-1]),   \"pal2\", rev(brewer.pal(9, \"Reds\")[-8:-9]) ) verify_palettes(palettes, column_info, data) #> $pal1 #> [1] \"#000000\" \"#252525\" \"#525252\" \"#737373\" \"#969696\" \"#BDBDBD\" \"#D9D9D9\" #> [8] \"#F0F0F0\" #>  #> $pal2 #> [1] \"#CB181D\" \"#EF3B2C\" \"#FB6A4A\" \"#FC9272\" \"#FCBBA1\" \"#FEE0D2\" \"#FFF5F0\" #>"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the row groups object — verify_row_groups","title":"Verify the integrity of the row groups object — verify_row_groups","text":"Verify integrity row groups object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the row groups object — verify_row_groups","text":"","code":"verify_row_groups(row_groups, row_info)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the row groups object — verify_row_groups","text":"row_groups data frame describing group rows row_info. Can consist following columns: group (character): corresponding group row_info$group. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). row_info data frame describing rows data. data contain two columns: id (character): Corresponds column data$id. group (character): group row. NA, rows split groups.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the row groups object — verify_row_groups","text":"row groups object expected rows.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the row groups object — verify_row_groups","text":"","code":"library(tibble) row_groups <- tribble(   ~group, ~level1,   \"foo\", \"Foo\",   \"bar\", \"Bar\" ) row_info <- tribble(   ~id, ~group,   \"name\", NA_character_,   \"foo1\", \"foo\",   \"foo2\", \"foo\",   \"bar1\", \"bar\",   \"bar2\", \"bar\" ) verify_row_groups(row_groups, row_info) #> # A tibble: 2 × 2 #>   group level1 #>   <chr> <chr>  #> 1 foo   Foo    #> 2 bar   Bar"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the row info object — verify_row_info","title":"Verify the integrity of the row info object — verify_row_info","text":"Verify integrity row info object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the row info object — verify_row_info","text":"","code":"verify_row_info(row_info, data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the row info object — verify_row_info","text":"row_info data frame describing rows data. data contain two columns: id (character): Corresponds column data$id. group (character): group row. NA, rows split groups. data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the row info object — verify_row_info","text":"row info object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the row info object — verify_row_info","text":"","code":"library(tibble) data <- tribble(   ~id, ~name, ~x, ~y,   \"foo1\", \"Foo1\", 0.5, 0.7,   \"foo2\", \"Foo2\", 0.5, 0.8,   \"bar1\", \"Bar1\", 1.0, 0.2,   \"bar2\", \"Bar2\", 1.0, 0.1 ) row_info <- tribble(   ~id, ~group,   \"foo1\", \"foo\",   \"foo2\", \"foo\",   \"bar1\", \"bar\",   \"bar2\", \"bar\" ) verify_row_info(row_info, data) #> # A tibble: 4 × 2 #>   id    group #>   <chr> <chr> #> 1 foo1  foo   #> 2 foo2  foo   #> 3 bar1  bar   #> 4 bar2  bar"},{"path":[]},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"funkyheatmap 0.3.0","text":"Funky rectangles now plotted using geom_rounded_rect(), thus simplifying code quite bit.","code":""},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"funkyheatmap 0.3.0","text":"Added parameter allowing change angle column annotation labels, col_annot_angle. Removed dynutils dependency.","code":""},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"funkyheatmap 0.3.0","text":"Removed parameter row_annot_offset since wasn’t used anymore.","code":""},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"funkyheatmap-020","dir":"Changelog","previous_headings":"","what":"funkyheatmap 0.2.0","title":"funkyheatmap 0.2.0","text":"CRAN release: 2023-01-13","code":""},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"funkyheatmap 0.2.0","text":"column info data frame can directly contain width, overlay, legend, hjust, vjust, size, label columns without passed inside options column first. options column can now also json string first parsed processed. Store data-raw/dynbenchmark_data.R script inside GitHub repo able reproduce dynbenchmark_data object. Also store info groupings columns rows dynbenchmark_data. Extended dynbenchmark vignette.","code":""},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"funkyheatmap-010","dir":"Changelog","previous_headings":"","what":"funkyheatmap 0.1.0","title":"funkyheatmap 0.1.0","text":"CRAN release: 2022-11-28 initial release funkyheatmap standalone package.","code":""},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"funkyheatmap 0.1.0","text":"Ported code funky_heatmap() dynverse/dynbenchmark. Split code different helper functions. Added verify_*() functions checking file format input objects trying provide helpful messages format correct. Added documentation, unit tests examples. Website published funkyheatmap.dynverse.org.","code":""}]
